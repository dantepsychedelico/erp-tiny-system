var cassandra = require('cassandra-driver'),
    Q = require('q'),
    _ = require('lodash');



function onInstanceAndConfig(defer, meanioinstance, config, done) {
  var defaultConfig = config.clean;
  var database = new cassandra.Client({
      contactPoints: _.values(defaultConfig.db),
      keyspace: defaultConfig.keyspace || 'test'
  });
  function execute(sql, params, options) {
    var deferred = Q.defer();
    database.execute(sql, params || [], options, function(err, result) {
      if (err) {
        console.log('\033[31m[ERR:CQL] %s \033[0m', err.message);
        deferred.reject(err);
      }
      deferred.resolve(result);
    });
    return deferred.promise;
  }

  database.connect(function(err, result) {
    if (err) {
      console.error('Error:', err.message);
      return console.error('**Could not connect to Cassandra. Please ensure mongod is running and restart MEAN app.**');
    }
    meanioinstance.register('database', {
      connection: database,
      execute: execute,
      eachRow: database.eachRow.bind(database)
    });
    defer.resolve();
  });

};

function onInstance(meanioinstance, defer){
  meanioinstance.resolve('defaultconfig', onInstanceAndConfig.bind(null, defer, meanioinstance));
}


module.exports = function (Meanio) {
  Meanio.onInstance(onInstance);
};

