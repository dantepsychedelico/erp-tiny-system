// 'use strict';

var pg = require('pg'),
    Q = require('q'),
    _ = require('lodash');



function onInstanceAndConfig(defer, meanioinstance, config, done) {
  var defaultConfig = config.clean;

  function execute(sql, params) {
    var deferred = Q.defer();
    pg.connect(defaultConfig.db, function(err, client, done) {
      if (err) {
        console.error('\033[31m**Could not connect to Postgres\033[0m');
        return deferred.reject(err);
      }
      client.query(sql, params || [], function(err, result) {
        done()
        if (err) {
          console.log('\033[31m[ERR:SQL] %s \033[0m', err.message);
          deferred.reject(err);
        } else {
          deferred.resolve(result);
        }
      });
    });
    return deferred.promise;
  }

  meanioinstance.register('database', {
      execute: execute
  });

  defer.resolve();
};

function onInstance(meanioinstance, defer){
  meanioinstance.resolve('defaultconfig', onInstanceAndConfig.bind(null, defer, meanioinstance));
}


module.exports = function (Meanio) {
  Meanio.onInstance(onInstance);
};


